angular.module("mundialitoApp",["security","ngSanitize","ngRoute","ngAnimate","ui.bootstrap","autofields.bootstrap","cgBusy","ajoslin.promise-tracker","ui.select2","ui.bootstrap.datetimepicker","FacebookPluginDirectives","ui.grid","ui.grid.autoResize","googlechart","angular-data.DSCacheFactory","toaster","ui.grid.saveState","ui.grid.resizeColumns"]).value("cgBusyTemplateName","App/Partials/angular-busy.html").config(["$routeProvider","$httpProvider","$locationProvider","$parseProvider","securityProvider","Constants",function(e,t,a,r,n,s){a.html5Mode(!0),t.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",t.interceptors.push("myHttpInterceptor"),n.urls.login=s.LOGIN_PATH,n.usePopups=!1,e.when("/",{templateUrl:"App/Dashboard/Dashboard.html",controller:"DashboardCtrl",resolve:{teams:["TeamsManager",function(e){return e.loadAllTeams()}],players:["PlayersManager",function(e){return e.loadAllPlayers()}]}}).when("/bets_center",{templateUrl:"App/Bets/BetsCenter.html",controller:"BetsCenterCtrl",resolve:{games:["GamesManager",function(e){return e.loadOpenGames()}]}}).when("/users/:username",{templateUrl:"App/Users/UserProfile.html",controller:"UserProfileCtrl",resolve:{profileUser:["$route","UsersManager",function(e,t){var a=e.current.params.username;return t.getUser(a,!0)}],userGameBets:["$route","BetsManager",function(e,t){var a=e.current.params.username;return t.getUserBets(a)}],teams:["TeamsManager",function(e){return e.loadAllTeams()}],generalBetsAreOpen:["GeneralBetsManager",function(e){return e.canSubmtiGeneralBet()}],players:["PlayersManager",function(e){return e.loadAllPlayers()}]}}).when("/manage_users",{templateUrl:"App/Users/ManageApp.html",controller:"ManageAppCtrl",resolve:{users:["UsersManager",function(e){return e.loadAllUsers()}],teams:["TeamsManager",function(e){return e.loadAllTeams()}],generalBets:["GeneralBetsManager",function(e){return e.loadAllGeneralBets()}],players:["PlayersManager",function(e){return e.loadAllPlayers()}]}}).when("/teams",{templateUrl:"App/Teams/Teams.html",controller:"TeamsCtrl",resolve:{teams:["TeamsManager",function(e){return e.loadAllTeams()}]}}).when("/teams/:teamId",{templateUrl:"App/Teams/Team.html",controller:"TeamCtrl",resolve:{team:["$route","TeamsManager",function(e,t){var a=e.current.params.teamId;return t.getTeam(a)}],games:["$route","GamesManager",function(e,t){var a=e.current.params.teamId;return t.getTeamGames(a)}]}}).when("/games/:gameId",{templateUrl:"App/Games/Game.html",controller:"GameCtrl",resolve:{game:["$route","GamesManager",function(e,t){var a=e.current.params.gameId;return t.getGame(a)}],userBet:["$route","BetsManager",function(e,t){var a=e.current.params.gameId;return t.getUserBetOnGame(a)}]}}).when("/games",{templateUrl:"App/Games/Games.html",controller:"GamesCtrl",resolve:{games:["GamesManager",function(e){return e.loadAllGames()}],teams:["TeamsManager",function(e){return e.loadAllTeams()}]}}).when("/stadiums/:stadiumId",{templateUrl:"App/Stadiums/Stadium.html",controller:"StadiumCtrl",resolve:{stadium:["$q","$route","StadiumsManager",function(e,t,a){var r=t.current.params.stadiumId;return a.getStadium(r,!0)}]}}).when("/stadiums",{templateUrl:"App/Stadiums/Stadiums.html",controller:"StadiumsCtrl",resolve:{stadiums:["StadiumsManager",function(e){return e.loadAllStadiums()}]}}).when("/login",{templateUrl:"App/Accounts/Login.html"}).when("/forgot",{templateUrl:"App/Accounts/ForgetPassword.html",controller:"ForgetPasswordCtrl"}).when("/reset",{templateUrl:"App/Accounts/ResetPassword.html",controller:"ResetPasswordCtrl"}).when("/join",{templateUrl:"App/Accounts/Register.html"}).when("/manage",{templateUrl:"App/Accounts/Manage.html"}).otherwise({redirectTo:"/"})}]).run(["$rootScope","$log","security","$route","$location",function(e,t,a,r,n){a.events.login=function(a,r){t.log("Current user details: "+angular.toJson(r)),e.mundialitoApp.authenticating=!1},a.events.reloadUser=function(a,r){t.log("User reloaded"+angular.toJson(r)),e.mundialitoApp.authenticating=!1},a.events.logout=function(e){t.log("User logged out"),e.authenticate()},e.mundialitoApp={params:null,loading:!0,authenticating:!0,message:null},["/reset","/forgot","/join","/login"].includes(n.$$path)||(t.log("Starting authentication"),a.authenticate()),e.security=a,e.$on("$locationChangeStart",function(){t.debug("$locationChangeStart"),e.mundialitoApp.loading=!0}),e.$on("$locationChangeSuccess",function(){t.debug("$locationChangeSuccess"),e.mundialitoApp.params=angular.copy(r.current.params),e.mundialitoApp.loading=!1}),e.$on("$routeChangeStart",function(){t.debug("$routeChangeStart"),e.mundialitoApp.message="Loading..."}),e.$on("$routeChangeSuccess",function(){t.debug("$routeChangeSuccess"),e.mundialitoApp.message=null})}]),angular.module("mundialitoApp").constant("Constants",{LOGIN_PATH:"/login",REFRESH_TIME:3e5,TABLE_GRID_OPTIONS:{saveWidths:!0,saveVisible:!0,saveOrder:!0,enableRowSelection:!1,enableSelectAll:!1,multiSelect:!1,rowTemplate:'<div ng-click="grid.appScope.goToUser(row)" style="cursor: pointer" ng-class="{\'text-primary\':row.entity.Username===grid.appScope.security.user.Username }"><div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell></div></div>',columnDefs:[{field:"Place",displayName:"",resizable:!1,maxWidth:30},{field:"Name",displayName:"Name",resizable:!0,minWidth:150},{field:"TotalMarks",displayName:"Total Marks",resizable:!0},{field:"Results",displayName:"Results",resizable:!0},{field:"Marks",displayName:"Marks",resizable:!0},{field:"YellowCards",displayName:"Yellow Cards Marks",resizable:!0},{field:"Corners",displayName:"Corners Marks",resizable:!0},{field:"Points",displayName:"Points",resizable:!0},{field:"PlaceDiff",displayName:"",resizable:!1,maxWidth:45,cellTemplate:"<div ng-class=\"{'text-success': COL_FIELD.indexOf('+') !== -1, 'text-danger': (COL_FIELD.indexOf('+') === -1) && (COL_FIELD !== '0')}\"><div class=\"ngCellText\">{{::COL_FIELD}}</div></div>"}]}}),angular.module("mundialitoApp").controller("ForgetPasswordCtrl",["$scope","$rootScope","security","Alert",function(e,t,a,r){t.mundialitoApp.authenticating=!1;e.user=new function(){return{Email:""}},e.forget=function(){e.emailForm.$valid&&(t.mundialitoApp.message="Processing...",a.forgotPassword(angular.copy(e.user)).then(()=>{r.success("Reset password token was sent to your email, please follow the link from there")}).catch(e=>{r.error("Failed to generate reset password token: "+e)}).finally(function(){t.mundialitoApp.message=null}))},e.schema=[{property:"Email",label:"Email Address",type:"email",attr:{required:!0}}]}]),angular.module("mundialitoApp").controller("LoginCtrl",["$scope","$rootScope","security",function(e,t,a){t.mundialitoApp.authenticating=!1;e.user=new function(){return{username:"",password:"",rememberMe:!1}},e.login=function(){e.loginForm.$valid&&(t.mundialitoApp.message="Processing Login...",a.login(angular.copy(e.user)).finally(function(){t.mundialitoApp.message=null}))},e.schema=[{property:"username",type:"text",attr:{ngMinlength:4,required:!0}},{property:"password",type:"password",attr:{ngMinlength:4,required:!0}},{property:"rememberMe",label:"Keep me logged in",type:"checkbox"}]}]),angular.module("mundialitoApp").controller("ManageCtrl",["$scope","Alert",function(e,t){var a=function(){return{oldPassword:"",newPassword:"",confirmPassword:""}};e.changingPassword=null,e.changePassword=function(){e.changingPassword=new a},e.cancel=function(){e.changingPassword=null},e.updatePassword=function(){if(e.manageForm.$valid){var a=angular.copy(e.changingPassword);e.changingPassword=null,e.security.changePassword(a).then(function(){t.success("Password was changed sucessfully")},function(){t.error("Failed to change password"),e.changingPassword=a})}},e.changePasswordSchema=[{property:"oldPassword",type:"password",attr:{required:!0}},{property:"newPassword",type:"password",attr:{ngMinlength:4,required:!0}},{property:"confirmPassword",type:"password",attr:{confirmPassword:"changingPassword.newPassword",required:!0}}]}]),angular.module("mundialitoApp").controller("RegisterCtrl",["$scope","security",function(e,t){e.mundialitoApp.authenticating=!1;e.user=new function(){return{firstname:"",lastname:"",email:"",username:"",password:"",confirmPassword:""}},e.join=function(){e.joinForm.$valid&&(e.isJoinActive=!0,e.mundialitoApp.message="Processing Registration...",t.register(angular.copy(e.user)).finally(function(){e.mundialitoApp.message=null,e.isJoinActive=!1}))},e.schema=[{property:"firstname",label:"First Name",type:"text",attr:{required:!0}},{property:"lastname",label:"Last Name",type:"text",attr:{required:!0}},{property:"email",label:"Email Address",type:"email",attr:{required:!0}},{property:"username",type:"text",attr:{ngMinlength:4,required:!0}},{property:"password",type:"password",attr:{required:!0}},{property:"confirmPassword",label:"Confirm Password",type:"password",attr:{confirmPassword:"user.password",required:!0}}],!0===e.mundialitoApp.protect&&(e.user.privateKey="",e.schema.push({property:"privateKey",help:"The Private Key was given in the e-mail of the payment confirmation",label:"Private Key",type:"text",attr:{required:!0}}))}]),angular.module("mundialitoApp").controller("ResetPasswordCtrl",["$scope","$rootScope","security","$location","Alert",function(e,t,a,r,n){t.mundialitoApp.authenticating=!1;e.user=new function(){return{confirmPassword:"",password:"",email:r.search().email,token:r.search().token}},e.reset=function(){e.resetForm.$valid&&(t.mundialitoApp.message="Processing Reset Password...",a.resetPassword(angular.copy(e.user)).then(()=>{n.success("Your was was reset successfully")}).finally(function(){t.mundialitoApp.message=null}))},e.schema=[{property:"password",type:"password",attr:{required:!0}},{property:"confirmPassword",label:"Confirm Password",type:"password",attr:{confirmPassword:"user.password",required:!0}}]}]),angular.module("mundialitoApp").factory("Bet",["$http","$log",function(e,t){function a(e){e&&this.setData(e)}return a.prototype={setData:function(e){angular.extend(this,e)},update:function(){return t.debug("Bet: Will update bet "+this.BetId),e.put("api/bets/"+this.BetId,this,{tracker:"updateBet"})},getGameUrl:function(){return"/games/"+this.Game.GameId},getClass:function(){return 7===this.Points?"success":this.Points>=5?"primary":this.Points>=3?"info":this.Points>0?"warning":"danger"}},a}]),angular.module("mundialitoApp").controller("BetsCenterCtrl",["$scope","$log","$timeout","Alert","BetsManager","games",function(e,t,a,r,n,s){e.games=s,e.bets={};var i=function(){angular.isDefined(e.security.user)&&null!=e.security.user?n.getUserBets(e.security.user.Username).then(function(a){for(var r=0;r<a.length;r++)e.bets[a[r].Game.GameId]=a[r],e.bets[a[r].Game.GameId].GameId=a[r].Game.GameId;for(var n=0;n<s.length;n++)angular.isDefined(e.bets[s[n].GameId])?e.bets[e.bets[s[n].GameId]]=a[r]:(t.debug("BetsCenterCtrl: game "+s[n].GameId+" has not bet"),e.bets[s[n].GameId]={BetId:-1,GameId:s[n].GameId})}):(t.debug("BetsCenterCtrl: user info not loaded yet, will retry in 1 second"),a(i,1e3))};i(),e.updateBet=function(a){-1!==e.bets[a].BetId?(t.debug("BetsCenterCtrl: Will update bet"),e.bets[a].update().success(function(e){r.success("Bet was updated successfully"),n.setBet(e)}).catch(function(){r.error("Failed to update Bet, please try again")})):(t.debug("BetsCenterCtrl: Will create new bet"),n.addBet(e.bets[a]).then(function(n){t.log("BetsCenterCtrl: Bet "+n.BetId+" was added"),e.bets[a]=n,r.success("Bet was added successfully")}).catch(function(){r.error("Failed to add Bet, please try again")}))},e.shuffleBet=function(a){var r,n,s=["1","X","2"],i=[0,0,0,0,1,1,1,1,2,2,3,3,4,5],o=s[Math.floor(3*Math.random())];do{r=i[Math.floor(Math.random()*i.length)],n=i[Math.floor(Math.random()*i.length)]}while("X"!==o&&r===n);t.debug("Random game mark is "+o),"X"===o&&(n=r),t.debug("Home goals: "+r),t.debug("Away goals: "+n),e.bets[a].HomeScore=r,e.bets[a].AwayScore=n,e.bets[a].CardsMark=s[Math.floor(3*Math.random())],e.bets[a].CornersMark=s[Math.floor(3*Math.random())]}}]),angular.module("mundialitoApp").factory("BetsManager",["$http","$q","Bet","$log","MundialitoUtils","GamesManager",function(e,t,a,r,n,s){return{_pool:{},_retrieveInstance:function(e,t){var n=this._pool[e];return n?(r.debug("BetsManager: updating existing instance of bet "+e),n.setData(t)):(r.debug("BetsManager: saving new instance of bet "+e),n=new a(t),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("BetsManager: will fetch bet "+e+" from local pool");var t=this._pool[e];if(!angular.isDefined(t)||!n.shouldRefreshInstance(t))return t;r.debug("BetsManager: Instance was loaded at "+t,LoadTime+", will reload it from server")},_load:function(t,a){var n=this;r.debug("BetsManager: will fetch bet "+t+" from server"),e.get("api/bets/"+t,{tracker:"getBet"}).success(function(e){var t=n._retrieveInstance(e.BetId,e);a.resolve(t)}).error(function(){a.reject()})},addBet:function(a){var n=t.defer(),i=this;return r.debug("BetsManager: will add new bet - "+angular.toJson(a)),e.post("api/bets/",a,{tracker:"addBetOnGame"}).success(function(e){var t=i._retrieveInstance(e.BetId,e);s.clearGamesCache(),n.resolve(t)}).error(function(e){r.error("Failed to add bet"),n.reject(e)}),n.promise},getBet:function(e,a){var r=t.defer(),n=void 0;return angular.isDefined(a)&&a||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},getGameBets:function(a){var n=t.defer(),s=this;return r.debug("BetsManager: will fetch all bets of game "+a+" from server"),e.get("api/games/"+a+"/bets",{tracker:"getGameBets"}).success(function(e){var t=[];e.forEach(function(e){var a=s._retrieveInstance(e.BetId,e);t.push(a)}),n.resolve(t)}).error(function(){n.reject()}),n.promise},getUserBets:function(a){var n=t.defer(),s=this;return r.debug("BetsManager: will fetch user "+a+" bets from server"),e.get("api/bets/user/"+a,{tracker:"getUserBets"}).success(function(e){var t=[];e.forEach(function(e){var a=s._retrieveInstance(e.BetId,e);t.push(a)}),n.resolve(t)}).error(function(){n.reject()}),n.promise},getUserBetOnGame:function(a){var n=t.defer(),s=this;return r.debug("BetsManager: will fetch user bet of game "+a+" from server"),e.get("api/games/"+a+"/mybet",{tracker:"getUserBetOnGame"}).success(function(e){if(-1!=e.BetId){var t=s._retrieveInstance(e.BetId,e);n.resolve(t)}n.resolve(e)}).error(function(){n.reject()}),n.promise},setBet:function(e){r.debug("BetsManager: will set bet "+e.BetId+" to -"+angular.toJson(e));var t=this._search(e.BetId);return t?t.setData(e):t=this._retrieveInstance(e.BetId,e),t}}}]),angular.module("mundialitoApp").controller("DashboardCtrl",["$scope","$log","Constants","$location","$timeout","GamesManager","UsersManager","GeneralBetsManager","teams","players",function(e,t,a,r,n,s,i,o,l,u){e.generalBetsAreOpen=!1,e.submittedGeneralBet=!0,e.pendingUpdateGames=!1,e.teamsDic={},e.playersDic={};for(var c=0;c<l.length;c++)e.teamsDic[l[c].TeamId]=l[c];for(c=0;c<u.length;c++)e.playersDic[u[c].PlayerId]=u[c];s.loadAllGames().then(function(t){e.games=t,e.pendingUpdateGames=void 0!==_.findWhere(e.games,{IsPendingUpdate:!0})});var d=function(){angular.isDefined(e.security.user)&&null!=e.security.user?o.hasGeneralBet(e.security.user.Username).then(function(t){e.submittedGeneralBet=!0===t}):(t.debug("DashboardCtrl: user info not loaded yet, will retry in 1 second"),n(d,1e3))};function m(){var t=e.gridApi.saveState.save();localStorage.setItem("gridState",t)}d(),o.canSubmtiGeneralBet().then(t=>{e.generalBetsAreOpen=!0===t,e.generalBetsAreOpen||o.loadAllGeneralBets().then(function(t){e.generalBets=t,e.winningTeams={},e.winningPlayers={};for(var a=0;a<e.generalBets.length;a++)angular.isDefined(e.winningTeams[e.generalBets[a].WinningTeamId])||(e.winningTeams[e.generalBets[a].WinningTeamId]=0),e.winningTeams[e.generalBets[a].WinningTeamId]+=1,angular.isDefined(e.winningPlayers[e.generalBets[a].GoldenBootPlayerId])||(e.winningPlayers[e.generalBets[a].GoldenBootPlayerId]=0),e.winningPlayers[e.generalBets[a].GoldenBootPlayerId]+=1;var r={type:"PieChart",options:{displayExactValues:!0,is3D:!0,backgroundColor:{fill:"transparent"},chartArea:{left:10,top:20,bottom:0,height:"100%"},title:"Winning Team Bets Distribution"},data:[["Team","Number Of Users"]]};for(var n in e.winningTeams)r.data.push([e.teamsDic[n].Name,e.winningTeams[n]]);for(var s in e.chart=r,(r={}).type="PieChart",r.options={displayExactValues:!0,is3D:!0,backgroundColor:{fill:"transparent"},chartArea:{left:10,top:20,bottom:0,height:"100%"},title:"Winning Golden Boot Player Bets Distribution"},r.data=[["Player","Number Of Users"]],e.winningPlayers)r.data.push([e.playersDic[s].Name,e.winningPlayers[s]]);e.playersChart=r})}),i.getTable().then(t=>{e.users=t}),e.isOpenForBetting=(()=>e=>e.IsOpen),e.isPendingUpdate=(()=>e=>e.IsPendingUpdate),e.isDecided=(()=>e=>!e.IsOpen&&!e.IsPendingUpdate),e.gridOptions={...a.TABLE_GRID_OPTIONS,data:"users",onRegisterApi:t=>{e.gridApi=t,e.gridApi.colResizable.on.columnSizeChanged(e,m),e.gridApi.core.on.columnVisibilityChanged(e,m),e.gridApi.core.on.sortChanged(e,m)}},e.getTableHeight=(()=>{var a=30*(e.users?e.users.length:0)+30;return t.debug("Total Height: "+a),{height:a+"px"}}),e.goToUser=(e=>{r.path(e.entity.getUrl())})}]),angular.module("mundialitoApp").factory("Game",["$http","$log",function(e,t){function a(e){e&&this.setData(e)}return a.prototype={setData:function(e){angular.extend(this,e)},delete:function(){if(confirm("Are you sure you would like to delete game "+this.GameId))return t.debug("Game: Will delete game "+this.GameId),e.delete("api/games/"+this.GameId,{tracker:"deleteGame"})},update:function(){return t.debug("Game: Will update game "+this.GameId),e.put("api/games/"+this.GameId,this,{tracker:"editGame"})},getUrl:function(){return"/games/"+this.GameId}},a}]),angular.module("mundialitoApp").controller("GameCtrl",["$scope","$log","Constants","UsersManager","GamesManager","BetsManager","game","userBet","Alert","$location",function(e,t,a,r,n,s,i,o,l,u){function c(){var t=e.gridApi.saveState.save();localStorage.setItem("gridState",t)}e.game=i,e.simulatedGame={},e.userBet=o,e.userBet.GameId=i.GameId,e.showEditForm=!1,e.game.IsOpen||s.getGameBets(e.game.GameId).then(function(a){t.debug("GameCtrl: get game bets"+angular.toJson(a)),e.gameBets=a;var r={type:"PieChart",options:{displayExactValues:!0,is3D:!0,backgroundColor:{fill:"transparent"},chartArea:{left:10,top:20,bottom:0,height:"100%"},title:"Bets Distribution"}},n=_.filter(a,function(e){return e.HomeScore>e.AwayScore}).length,s=_.filter(a,function(e){return e.HomeScore===e.AwayScore}).length,i=_.filter(a,function(e){return e.HomeScore<e.AwayScore}).length;r.data=[["Game Mark","Number Of Users"],["1",n],["X",s],["2",i]],e.chart=r}),e.updateGame=(()=>{angular.isDefined(i.Stadium.Games)&&null!=i.Stadium.Games&&delete i.Stadium.Games,e.game.update().success(e=>{l.success("Game was updated successfully"),n.setGame(e)}).catch(e=>{l.error("Failed to update game, please try again"),t.error("Error updating game",e)})}),e.updateBet=(()=>{-1!==e.userBet.BetId?e.userBet.update().success(e=>{l.success("Bet was updated successfully"),s.setBet(e)}).error(e=>{l.error("Failed to update bet, please try again"),t.error("Error updating bet",e)}):s.addBet(e.userBet).then(a=>{t.log("GameCtrl: Bet "+a.BetId+" was added"),e.userBet=a,l.success("Bet was added successfully")},e=>{l.error("Failed to add bet, please try again"),t.error("Error adding bet",e)})}),e.simulateGame=(()=>{t.debug("GameCtrl: simulating game"),n.simulateGame(e.game.GameId,e.simulatedGame).then(t=>{e.users=t,l.success("Table updated with simulation result")}).catch(e=>{l.error("Failed to simulate game, please try again"),t.error("Error simulating game",e)})}),e.sort=(a=>{t.debug("GameCtrl: sorting by "+a),e.gameBets=_.sortBy(e.gameBets,e=>{switch(a){case"points":return e.Points;case"cards":return e.CardsMark;case"corners":return e.CornersMark;case"user":return e.User.FirstName+e.User.LastName;case"result":return e.HomeScore+"-"+e.AwayScore}})}),e.gridOptions={...a.TABLE_GRID_OPTIONS,data:"users",onRegisterApi:t=>{e.gridApi=t,e.gridApi.colResizable.on.columnSizeChanged(e,c),e.gridApi.core.on.columnVisibilityChanged(e,c),e.gridApi.core.on.sortChanged(e,c)}},e.getTableHeight=(()=>{var a=30*(e.users?e.users.length:0)+30;return t.debug("Total Height: "+a),{height:a+"px"}}),e.goToUser=(e=>{u.path(e.entity.getUrl())}),e.$watch("simulatedGame",()=>{e.users=void 0},!0),r.getTable().then(t=>{let a=_.chain(t).filter(t=>t.Username!==e.security.user.Username).first(3).pluck("Username").value();e.top3UsersBets=_.filter(e.gameBets,e=>a.includes(e.User.Username));let r=0;t.forEach((t,a)=>{t.Username===e.security.user.Username&&(r=a)});let n=Math.max(r-3,0),s=Math.min(r+3,t.length),i=_.chain(t.slice(n,s+1)).pluck("Username").filter(t=>t!==e.security.user.Username).value();e.neighborsBets=_.filter(e.gameBets,e=>i.includes(e.User.Username))})}]),angular.module("mundialitoApp").controller("GamesCtrl",["$scope","$log","GamesManager","games","teams","StadiumsManager","Alert",function(e,t,a,r,n,s,i){e.newGame=null,e.gamesFilter="All",e.games=r,e.teams=n,s.loadAllStadiums().then(function(t){e.stadiums=t}),e.addNewGame=function(){$(".selectpicker").selectpicker("refresh"),e.newGame=a.getEmptyGameObject()},e.saveNewGame=function(){a.addGame(e.newGame).then(function(t){i.success("Game was added successfully"),e.newGame=a.getEmptyGameObject(),e.games.push(t)})},e.isPendingUpdate=function(){return function(e){return e.IsPendingUpdate}},e.updateGame=function(e){angular.isDefined(e.Stadium.Games)&&null!=e.Stadium.Games&&delete e.Stadium.Games,e.update().success(function(e){i.success("Game was updated successfully"),a.setGame(e)})}}]),angular.module("mundialitoApp").factory("GamesManager",["$http","$q","Game","$log","MundialitoUtils","DSCacheFactory","User",function(e,t,a,r,n,s,i){var o=void 0,l=void 0;return{_cacheManager:s("GamesManager",{cacheFlushInterval:18e5}),_pool:{},_retrieveInstance:function(e,t){var n=this._pool[e];return n?(r.debug("GamesManager: updating existing instance of game "+e),n.setData(t)):(r.debug("GamesManager: saving new instance of game "+e),n=new a(t),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("GamesManager: will fetch game "+e+" from local pool");var t=this._pool[e];if(!angular.isDefined(t)||!n.shouldRefreshInstance(t))return t;r.debug("GamesManager: Instance was loaded at "+t,LoadTime+", will reload it from server")},_load:function(t,a){var n=this;r.debug("GamesManager: will fetch game "+t+" from server"),e.get("api/games/"+t,{tracker:"getGame"}).success(function(e){var t=n._retrieveInstance(e.GameId,e);a.resolve(t)}).error(function(){a.reject()})},clearGamesCache:function(){this._cacheManager.remove("api/games")},getEmptyGameObject:function(){return{HomeTeam:"",AwayTeam:"",Date:"",Stadium:""}},addGame:function(a){var n=t.defer();angular.isObject(a.AwayTeam)||(a.AwayTeam=angular.fromJson(a.AwayTeam)),angular.isObject(a.HomeTeam)||(a.HomeTeam=angular.fromJson(a.HomeTeam)),angular.isObject(a.Stadium)||(a.Stadium=angular.fromJson(a.Stadium));var s=this;return r.debug("GamesManager: will add new game - "+angular.toJson(a)),e.post("api/games",a,{tracker:"addGame"}).success(function(e){var t=s._retrieveInstance(e.GameId,e);n.resolve(t)}).error(function(){n.reject()}),n.promise},getGame:function(e,a){var r=t.defer(),n=void 0;return angular.isDefined(a)&&a||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllGames:function(){if(o)return o;var a=t.defer(),n=this;return r.debug("GamesManager: will fetch all games from server"),e.get("api/games",{tracker:"getGames"}).success(function(e){var t=[];e.forEach(function(e){var a=n._retrieveInstance(e.GameId,e);t.push(a)}),a.resolve(t)}).error(function(){a.reject()}),o=a.promise,a.promise},loadOpenGames:function(){if(l)return l;var a=t.defer(),n=this;return r.debug("GamesManager: will fetch all open games from server"),e.get("api/games/open",{tracker:"getOpenGames"}).success(function(e){var t=[];e.forEach(function(e){var a=n._retrieveInstance(e.GameId,e);t.push(a)}),a.resolve(t)}).error(function(){a.reject()}),l=a.promise,a.promise},getTeamGames:function(a){var n=t.defer(),s=this;return r.debug("GamesManager: will fetch all games of team "+a+"  from server"),e.get("api/teams/"+a+"/games",{tracker:"getTeamGames"}).success(function(e){var t=[];e.forEach(function(e){var a=s._retrieveInstance(e.GameId,e);t.push(a)}),n.resolve(t)}).error(function(){n.reject()}),n.promise},getStadiumGames:function(a){var n=t.defer(),s=this;return r.debug("GamesManager: will fetch all games in stadium "+a+"  from server"),e.get("api/games/Stadium/"+a,{tracker:"getStadiumGames"}).success(function(e){var t=[];e.forEach(function(e){var a=s._retrieveInstance(e.GameId,e);t.push(a)}),n.resolve(t)}).error(function(){n.reject()}),n.promise},simulateGame:function(a,n){var s=t.defer();return r.debug("GamesManager: will simulate game "+a),e.post("api/games/"+a+"/simulate",n,{tracker:"simulateGame"}).success(e=>{var t=[];e.forEach(e=>{t.push(new i(e))}),s.resolve(t)}).error(()=>{s.reject()}),s.promise},setGame:function(e){r.debug("GamesManager: will set game "+e.GameId+" to -"+angular.toJson(e));var t=this._search(e.GameId);return t?t.setData(e):t=this._retrieveInstance(e.GameId,e),t}}}]),angular.module("mundialitoApp").directive("mundialitoGames",["Alert",function(e){return{restrict:"E",scope:{games:"=info",gamesType:"=filter",showOnly:"=",onAdd:"&"},templateUrl:"App/Games/gamesTemplate.html",link:function(t){t.deleteGame=function(a){var r=a;a.delete().success(function(){e.success("Game was deleted successfully"),t.games.splice(t.games.indexOf(r),1)})},t.matchGameType=function(e){return function(t){return!e||"All"===e||t.IsOpen}}}}}]),angular.module("mundialitoApp").factory("Alert",["toaster","$log","$rootScope",function(e,t,a){return{success:function(t){e.pop("success","Success",t)},error:function(t,a){e.pop("error",a||"Error",t)},note:function(t){e.pop("note","Info",t)}}}]),angular.module("mundialitoApp").factory("ErrorHandler",["$rootScope","$log","Alert","$location","Constants",function(e,t,a,r,n){return this.handle=function(e,s){if(t.log(e),401===s)return localStorage.removeItem("accessToken"),sessionStorage.removeItem("accessToken"),void r.path(n.LOGIN_PATH);var i=[],o=void 0;e.Message&&(o=e.Message),e.errors&&angular.forEach(e.errors,function(e){angular.forEach(e,function(e){i.push(e)})}),e.ModelState&&angular.forEach(e.ModelState,function(e){i.push(e)}),e.ExceptionMessage&&i.push(e.ExceptionMessage),e.error_description&&i.push(e.error_description),0!==i.length||o||(o="General Error",i.push("Looks like the server is down, please try again in few minutes")),a.error(i.join("\n"),o)},this}]).factory("myHttpInterceptor",["ErrorHandler","$q",function(e,t){return{response:function(e){return e},responseError:function(a){return e.handle(a.data,a.status,a.headers,a.config),t.reject(a)}}}]),angular.module("mundialitoApp").factory("MundialitoUtils",["Constants",function(e){return{shouldRefreshInstance:function(t){return!(!angular.isDefined(t.LoadTime)||!angular.isDate(t.LoadTime))&&(new Date).getTime()-t.LoadTime.getTime()>e.REFRESH_TIME}}}]),angular.module("mundialitoApp").directive("accessLevel",["$log","security",function(e,t){return{restrict:"A",link:function(e,a,r){var n,s=a.css("display"),i="";function o(){i&&n&&(i===n?a.css("display",s):a.css("display","none"))}e.$watch(function(){return t.user},function(t){e.user=t,i=void 0===e.user||null===e.user?"User":e.user.Roles?e.user.Roles:"User",o()},!0),r.$observe("accessLevel",function(e){e&&(n=e),o()})}}}]),angular.module("mundialitoApp").directive("activeNav",["$location",function(e){return{restrict:"A",link:function(t,a){var r=a.find("a")[0].href;t.location=e,t.$watch("location.absUrl()",function(e){r===e?a.addClass("active"):a.removeClass("active")})}}}]),angular.module("mundialitoApp").directive("confirmPassword",[function(){return{restrict:"A",require:"ngModel",link:function(e,t,a,r){r.$parsers.unshift(function(t,n){var s=t!=e.$eval(a.confirmPassword);return r.$setValidity("noMatch",!s),t})}}}]),angular.module("mundialitoApp").directive("mundialitoToggleText",[function(){return{link:function(e,t,a){e.$watch(a.varieble,function(e){var r;r=1==e?a.trueLabel:a.falseLabel,t.text(r)})}}}]),angular.module("mundialitoApp").factory("GeneralBet",["$http","$log",function(e,t){function a(e){e&&this.setData(e)}return a.prototype={setData:function(e){angular.extend(this,e)},update:function(){return t.debug("General Bet: Will update general bet "+this.GeneralBetId),e.put("api/generalbets/"+this.GeneralBetId,this,{tracker:"updateGeneralBet"})},resolve:function(){t.debug("General Bet: Will resolve general bet "+this.GeneralBetId);var a={TeamIsRight:this.TeamIsRight||!1,PlayerIsRight:this.PlayerIsRight||!1};return e.put("api/generalbets/"+this.GeneralBetId+"/resolve",a,{tracker:"resolveGeneralBet"})}},a}]),angular.module("mundialitoApp").factory("GeneralBetsManager",["$http","$q","GeneralBet","$log","MundialitoUtils",function(e,t,a,r,n){return{_pool:{},_retrieveInstance:function(e,t){var n=this._pool[e];return n?(r.debug("GeneralBetsManager: updating existing instance of bet "+e),n.setData(t)):(r.debug("GeneralBetsManager: saving new instance of bet "+e),n=new a(t),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("GeneralBetsManager: will fetch bet "+e+" from local pool");var t=this._pool[e];if(!angular.isDefined(t)||!n.shouldRefreshInstance(t))return t;r.debug("GeneralBetsManager: Instance was loaded at "+t,LoadTime+", will reload it from server")},_load:function(t,a){var n=this;r.debug("GeneralBetsManager: will fetch bet "+t+" from server"),e.get("api/generalbets/"+t,{tracker:"getGeneralBet"}).success(function(e){var t=n._retrieveInstance(e.GeneralBetId,e);a.resolve(t)}).error(function(){a.reject()})},addGeneralBet:function(a){var n=t.defer(),s=this;return r.debug("GeneralBetsManager: will add new bet - "+angular.toJson(a)),e.post("api/generalbets/",a,{tracker:"addGeneralBet"}).success(function(e){var t=s._retrieveInstance(e.GeneralBetId,e);n.resolve(t)}).error(function(){n.reject()}),n.promise},getGeneralBet:function(e,a){var r=t.defer(),n=void 0;return angular.isDefined(a)&&a||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllGeneralBets:function(){var a=t.defer(),n=this;return r.debug("GeneralBetsManager: will fetch all general bets from server"),e.get("api/generalbets",{tracker:"getGeneralBets"}).success(function(e){var t=[];e.forEach(function(e){var a=n._retrieveInstance(e.GeneralBetId,e);t.push(a)}),a.resolve(t)}).error(function(){a.reject()}),a.promise},hasGeneralBet:function(a){var n=t.defer();return r.debug("GeneralBetsManager: will check if user "+a+" has general bets"),e.get("api/generalbets/has-bet/"+a,{tracker:"getUserGeneralBet"}).success(function(e){n.resolve(e)}).error(function(){n.reject()}),n.promise},canSubmtiGeneralBet:function(){var a=t.defer();return r.debug("GeneralBetsManager: will check if user general bets are closed"),e.get("api/generalbets/cansubmitbets/",{tracker:"getCanSubmitGeneralBets"}).success(function(e){a.resolve(e)}).error(function(){a.reject()}),a.promise},getUserGeneralBet:function(a){var n=t.defer(),s=this;return r.debug("GeneralBetsManager: will fetch user "+a+" general bet from server"),e.get("api/generalbets/user/"+a,{tracker:"getUserGeneralBet"}).success(function(e){var t=s._retrieveInstance(e.GeneralBetId,e);n.resolve(t)}).error(function(){n.reject()}),n.promise},setGeneralBet:function(e){r.debug("GeneralBetsManager: will set bet "+e.GeneralBetId+" to -"+angular.toJson(e));var t=this._search(e.GeneralBetId);return t?t.setData(e):t=this._retrieveInstance(e.GeneralBetId,e),t}}}]),angular.module("mundialitoApp").factory("Player",["$http","$log",function(e,t){function a(e){e&&this.setData(e)}return a.prototype={setData:function(e){angular.extend(this,e)}},a}]),angular.module("mundialitoApp").factory("PlayersManager",["$http","$q","Player","$log",function(e,t,a,r){var n=void 0;return{_pool:{},_retrieveInstance:function(e,t){var n=this._pool[e];return n?(r.debug("playersPromise: updating existing instance of player "+e),n.setData(t)):(r.debug("playersPromise: saving new instance of player "+e),n=new a(t),this._pool[e]=n),n.LoadTime=new Date,n},getPlayerSchema:function(){return[{property:"Name",label:"Name",type:"text",attr:{required:!0}}]},loadAllPlayers:function(){if(n)return n;var a=t.defer(),s=this;return r.debug("PlayersManager: will fetch all players from server"),e.get("api/players",{tracker:"getPlayers",cache:!0}).success(function(e){var t=[];e.forEach(function(e){var a=s._retrieveInstance(e.PlayerId,e);t.push(a)}),a.resolve(t)}).error(function(){a.reject()}),n=a.promise,a.promise}}}]),angular.module("mundialitoApp").factory("Stadium",["$http","$log",function(e,t){function a(e){e&&this.setData(e)}return a.prototype={setData:function(e){angular.extend(this,e)},delete:function(){if(confirm("Are you sure you would like to delete stadium "+this.Name))return t.debug("Stadium: Will delete stadium "+this.StadiumId),e.delete("api/stadiums/"+this.StadiumId,{tracker:"deleteStadium"})},update:function(){t.debug("Stadium: Will update stadium "+this.StadiumId);var a={};return angular.copy(this,a),delete a.Games,e.put("api/stadiums/"+this.StadiumId,a,{tracker:"editStadium"})},getUrl:function(){return"/stadiums/"+this.StadiumId}},a}]),angular.module("mundialitoApp").controller("StadiumCtrl",["$scope","$log","StadiumsManager","GamesManager","stadium","Alert",function(e,t,a,r,n,s){e.stadium=n,e.showEditForm=!1,r.getStadiumGames(e.stadium.StadiumId).then(function(a){t.debug("StadiumCtrl: Got games of stadium"),e.games=a}),e.updateStadium=function(){e.stadium.update().success(function(){s.success("Stadium was updated successfully")})},e.schema=a.getStaidumSchema()}]),angular.module("mundialitoApp").controller("StadiumsCtrl",["$scope","$log","StadiumsManager","stadiums","Alert",function(e,t,a,r,n){e.stadiums=r,e.showNewStadium=!1,e.newStadium=null,e.addNewStadium=function(){e.newStadium=a.getEmptyStadiumObject()},e.saveNewStadium=function(){a.addStadium(e.newStadium).then(function(t){n.success("Stadium was added successfully"),e.newStadium=null,e.stadiums.push(t)})},e.deleteStadium=function(t){var a=t;t.delete().success(function(){n.success("Stadium was deleted successfully"),e.stadiums.splice(e.stadiums.indexOf(a),1)})},e.schema=a.getStaidumSchema()}]),angular.module("mundialitoApp").factory("StadiumsManager",["$http","$q","Stadium","$log","MundialitoUtils",function(e,t,a,r,n){var s=void 0;return{_pool:{},_retrieveInstance:function(e,t){var n=this._pool[e];return n?(r.debug("StadiumsManager: updating existing instance of stadium "+e),n.setData(t)):(r.debug("StadiumsManager: saving new instance of stadium "+e),n=new a(t),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("StadiumsManager: will fetch stadium "+e+" from local pool");var t=this._pool[e];if(!angular.isDefined(t)||!n.shouldRefreshInstance(t))return t;r.debug("StadiumsManager: Instance was loaded at "+t,LoadTime+", will reload it from server")},_load:function(t,a){var n=this;r.debug("StadiumsManager: will fetch stadium "+t+" from server"),e.get("api/stadiums/"+t,{tracker:"getStadium"}).success(function(e){var t=n._retrieveInstance(e.StadiumId,e);a.resolve(t)}).error(function(){a.reject()})},getStaidumSchema:function(){return[{property:"Name",label:"Name",type:"text",attr:{required:!0}},{property:"City",label:"City",type:"text",attr:{required:!0}},{property:"Capacity",label:"Capacity",type:"number",attr:{required:!0}}]},getEmptyStadiumObject:function(){return{HomeTeam:"",AwayTeam:""}},addStadium:function(a){var n=t.defer(),s=this;return r.debug("StadiumsManager: will add new stadium - "+angular.toJson(a)),e.post("api/stadiums",a,{tracker:"addStadium"}).success(function(e){var t=s._retrieveInstance(e.StadiumId,e);n.resolve(t)}).error(function(){n.reject()}),n.promise},getStadium:function(e,a){var r=t.defer(),n=void 0;return angular.isDefined(a)&&a||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllStadiums:function(){if(s)return s;var a=t.defer(),n=this;return r.debug("StadiumsManager: will fetch all games from server"),e.get("api/stadiums",{tracker:"getStadiums",cache:!0}).success(function(e){var t=[];e.forEach(function(e){var a=n._retrieveInstance(e.StadiumId,e);t.push(a)}),a.resolve(t)}).error(function(){a.reject()}),s=a.promise,a.promise},setStadium:function(e){r.debug("StadiumsManager: will set stadium "+e.StadiumId+" to -"+angular.toJson(e));var t=this._search(e.StadiumId);return t?t.setData(e):t=this._retrieveInstance(e.StadiumId,e),t}}}]),angular.module("mundialitoApp").factory("Team",["$http","$log",function(e,t){function a(e){e&&this.setData(e)}return a.prototype={setData:function(e){angular.extend(this,e),this.Logo=this.Logo.toLowerCase(),this.Flag=this.Flag.toLowerCase()},delete:function(){if(confirm("Are you sure you would like to delete team "+this.Name))return t.debug("Team: Will delete team "+this.TeamId),e.delete("api/teams/"+this.TeamId,{tracker:"deleteTeam"})},update:function(){return t.debug("Team: Will update game "+this.TeamId),e.put("api/teams/"+this.TeamId,this,{tracker:"editTeam"})},getUrl:function(){return"/teams/"+this.TeamId}},a}]),angular.module("mundialitoApp").controller("TeamCtrl",["$scope","$log","TeamsManager","team","games","Alert",function(e,t,a,r,n,s){e.team=r,e.games=n,e.showEditForm=!1,e.updateTeam=function(){e.team.update().success(function(e){s.success("Team was updated successfully"),a.setTeam(e)})},e.schema=a.getTeamSchema()}]),angular.module("mundialitoApp").controller("TeamsCtrl",["$scope","$log","TeamsManager","teams","Alert",function(e,t,a,r,n){e.teams=r,e.showNewTeam=!1,e.newTeam=null,e.addNewTeam=function(){e.newTeam=a.getEmptyTeamObject()},e.saveNewTeam=function(){a.addTeam(e.newTeam).then(function(t){n.success("Team was added successfully"),e.newTeam=null,e.teams.push(t)})},e.deleteTeam=function(t){var a=t;t.delete().success(function(){n.success("Team was deleted successfully"),e.teams.splice(e.teams.indexOf(a),1)})},e.schema=a.getTeamSchema()}]),angular.module("mundialitoApp").factory("TeamsManager",["$http","$q","Team","$log","MundialitoUtils",function(e,t,a,r,n){return{_pool:{},_retrieveInstance:function(e,t){var n=this._pool[e];return n?(r.debug("TeamsManager: updating existing instance of team "+e),n.setData(t)):(r.debug("TeamsManager: saving new instance of team "+e),n=new a(t),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("TeamsManager: will fetch team "+e+" from local pool");var t=this._pool[e];if(!angular.isDefined(t)||!n.shouldRefreshInstance(t))return t;r.debug("TeamsManager: Instance was loaded at "+t,LoadTime+", will reload it from server")},_load:function(t,a){var n=this;r.debug("TeamsManager: will fetch team "+t+" from server"),e.get("api/teams/"+t,{tracker:"getTeam"}).success(function(e){var t=n._retrieveInstance(e.TeamId,e);a.resolve(t)}).error(function(){a.reject()})},getTeamSchema:function(){return[{property:"Name",label:"Name",type:"text",attr:{required:!0}},{property:"Flag",label:"Flag",type:"url",attr:{required:!0}},{property:"TeamPage",label:"TeamPage",type:"url",attr:{required:!1}},{property:"Logo",label:"Logo",type:"url",attr:{required:!0}},{property:"ShortName",label:"Short Name",type:"text",attr:{ngMaxlength:3,ngMinlength:3,required:!0}},{property:"TournamentTeamId",label:"Tournament Team Id",type:"number",attr:{required:!1}}]},getEmptyTeamObject:function(){return{Name:"",Flag:"",Logo:"",ShortName:"",TournamentTeamId:null,TeamPage:null}},addTeam:function(a){var n=t.defer(),s=this;return r.debug("TeamsManager: will add new team - "+angular.toJson(a)),e.post("api/teams",a,{tracker:"addTeam"}).success(function(e){var t=s._retrieveInstance(e.TeamId,e);n.resolve(t)}).error(function(){n.reject()}),n.promise},getTeam:function(e,a){var r=t.defer(),n=void 0;return angular.isDefined(a)&&a||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},loadAllTeams:function(){var a=t.defer(),n=this;return r.debug("TeamsManager: will fetch all teams from server"),e.get("api/teams",{tracker:"getTeams",cache:!0}).success(function(e){var t=[];e.forEach(function(e){var a=n._retrieveInstance(e.TeamId,e);t.push(a)}),a.resolve(t)}).error(function(){a.reject()}),a.promise},setTeam:function(e){r.debug("TeamsManager: will set team "+e.TeamId+" to -"+angular.toJson(e));var t=this._search(e.TeamId);return t?t.setData(e):t=this._retrieveInstance(e.TeamId,e),t}}}]),angular.module("mundialitoApp").controller("ManageAppCtrl",["$scope","$log","Alert","users","teams","generalBets","UsersManager","players",function(e,t,a,r,n,s,i,o){e.users=r,e.generalBets=s,e.privateKey={},e.teamsDic={},e.playersDic={};for(var l=0;l<n.length;l++)e.teamsDic[n[l].TeamId]=n[l];for(l=0;l<o.length;l++)e.playersDic[o[l].PlayerId]=o[l];e.deleteUser=function(t){var r=t;t.delete().success(function(){a.success("User was deleted successfully"),e.users.splice(e.users.indexOf(r),1)})},e.resolveBet=function(e){e.resolve().success(function(){a.success("General bet was resolved successfully")})},e.generateKey=function(){e.privateKey.key="",i.generatePrivateKey(e.privateKey.email).then(function(a){t.debug("ManageAppCtrl: got private key "+a),e.privateKey.key=a})},e.makeAdmin=function(e){e.makeAdmin().success(function(){a.success("User was is now admin"),e.IsAdmin=!0})}}]),angular.module("mundialitoApp").factory("User",["$http","$log",function(e,t){function a(e){e&&this.setData(e)}return a.prototype={setData:function(e){angular.extend(this,e)},getUrl:function(){return"/users/"+this.Username},delete:function(){if(confirm("Are you sure you would like to delete user "+this.Username))return t.debug("User: Will delete user "+this.Username),e.delete("api/users/"+this.Id,{tracker:"deleteUser"})},makeAdmin:function(){if(confirm("Are you sure you would like to make "+this.Name+" Admin?"))return t.debug("User: Will make user "+this.Username+" admin"),e.post("api/users/makeadmin/"+this.Id,{tracker:"makeAdmin"})}},a}]),angular.module("mundialitoApp").controller("UserProfileCtrl",["$scope","$log","$routeParams","Alert","GeneralBetsManager","profileUser","userGameBets","teams","generalBetsAreOpen","players",function(e,t,a,r,n,s,i,o,l,u){e.profileUser=s,e.userGameBets=i,e.teams=o,e.players=u,e.noGeneralBetWasSubmitted=!1,e.generalBetsAreOpen=!0===l,t.debug("UserProfileCtrl: generalBetsAreOpen = "+l),e.isLoggedUserProfile=function(){var a=null!=e.security.user&&e.security.user.Username===e.profileUser.Username;return t.debug("UserProfileCtrl: isLoggedUserProfile = "+a),null!=e.security.user&&e.security.user.Username===e.profileUser.Username},e.isGeneralBetClosed=function(){var a=!e.generalBetsAreOpen;return t.debug("UserProfileCtrl: isGeneralBetClosed = "+a),a},e.isGeneralBetReadOnly=function(){var a=!e.isLoggedUserProfile()||e.isGeneralBetClosed();return t.debug("UserProfileCtrl: isGeneralBetReadOnly = "+a),a},e.shoudLoadGeneralBet=function(){var a=e.isLoggedUserProfile()||e.isGeneralBetClosed();return t.debug("UserProfileCtrl: shoudLoadGeneralBet = "+a),a},e.shoudLoadGeneralBet()&&n.hasGeneralBet(e.profileUser.Username).then(function(a){if(t.debug("UserProfileCtrl: hasGeneralBet = "+a),!0===a)n.getUserGeneralBet(e.profileUser.Username).then(function(a){t.debug("UserProfileCtrl: got user general bet - "+angular.toJson(a)),e.generalBet=a});else{if(e.generalBet={},e.isGeneralBetClosed())return void(e.noGeneralBetWasSubmitted=!0);if(e.isLoggedUserProfile()&&!e.isGeneralBetClosed())return;e.noGeneralBetWasSubmitted=!0}}),e.saveGeneralBet=function(){angular.isDefined(e.generalBet.GeneralBetId)?e.generalBet.update().then(function(){r.success("General Bet was updated successfully")},function(){r.error("Failed to update General Bet, please try again")}):n.addGeneralBet(e.generalBet).then(function(a){t.log("UserProfileCtrl: General Bet "+a.GeneralBetId+" was added"),e.generalBet=a,r.success("General Bet was added successfully")},function(){r.error("Failed to add General Bet, please try again")})}}]),angular.module("mundialitoApp").factory("UsersManager",["$http","$q","User","$log","MundialitoUtils","DSCacheFactory",function(e,t,a,r,n,s){var i=void 0;return{_cacheManager:s("UsersManager",{cacheFlushInterval:18e5}),_pool:{},_retrieveInstance:function(e,t){var n=this._pool[e];return n?(r.debug("UsersManager: updating existing instance of user "+e),n.setData(t)):(r.debug("UsersManager: saving new instance of user "+e),n=new a(t),this._pool[e]=n),n.LoadTime=new Date,n},_search:function(e){r.debug("UsersManager: will fetch user "+e+" from local pool");var t=this._pool[e];if(!angular.isDefined(t)||!n.shouldRefreshInstance(t))return t;r.debug("UsersManager: Instance was loaded at "+t,LoadTime+", will reload it from server")},_load:function(t,a){var n=this;r.debug("UsersManager: will fetch user "+t+" from server"),e.get("api/users/"+t,{tracker:"getUser"}).success(function(e){var t=n._retrieveInstance(e.Username,e);a.resolve(t)}).error(function(){a.reject()})},getUser:function(e,a){var r=t.defer(),n=void 0;return angular.isDefined(a)&&a||(n=this._search(e)),n?r.resolve(n):this._load(e,r),r.promise},generatePrivateKey:function(a){var n=t.defer();return r.debug("UsersManager: will generate private key for "+a),e.get("api/users/generateprivatekey/"+encodeURIComponent(a)+"/",{tracker:"generatePrivateKey"}).success(function(e){n.resolve(e)}).error(function(){n.reject()}),n.promise},getTable:function(){var t=this;return r.debug("UsersManager: will fetch table from server"),e.get("api/users/table",{tracker:"getUsers"}).then(function(e){var a=[];return e.data.forEach(function(e){var r=t._retrieveInstance(e.Username,e);a.push(r)}),a})},loadAllUsers:function(){if(i)return i;var a=t.defer(),n=this;return r.debug("UsersManager: will fetch all users from server"),e.get("api/users",{tracker:"getUsers"}).success(function(e){var t=[];e.forEach(function(e){var a=n._retrieveInstance(e.Username,e);t.push(a)}),a.resolve(t)}).error(function(){a.reject()}),i=a.promise,a.promise},setUser:function(e){r.debug("UsersManager: will set user "+e.Username+" to -"+angular.toJson(e));var t=this._search(e.Username);return t?t.setData(e):t=this._retrieveInstance(e.Username,e),t}}}]);